/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import TP6Ej2.package1.Producto;
import java.util.TreeSet;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jeso_
 */
public class VistaBuscarPorPrecio extends javax.swing.JInternalFrame {

    DefaultTableModel modelo = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; 
        }
    };
    /**
     * Creates new form VistaBuscarPorPrecio
     */
    public VistaBuscarPorPrecio() {
        initComponents();
        String[] columnNames = { "Codigo", "Descripcion", "Precio", "Stock", "Categoria" };
        modelo.setColumnIdentifiers(columnNames);
        JTablePrecios.setModel(modelo);
        
        
        JTFbuscarPorPrecio.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                filtrarPorPrecio();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                filtrarPorPrecio();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                filtrarPorPrecio();
            }
        });
        
        JTFbuscarPorPrecio1.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                filtrarPorPrecio();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                filtrarPorPrecio();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                filtrarPorPrecio();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTablePrecios = new javax.swing.JTable();
        JTFbuscarPorPrecio = new javax.swing.JTextField();
        JTFbuscarPorPrecio1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 97, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 494, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Buscar por precio");

        JTablePrecios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(JTablePrecios);

        JTFbuscarPorPrecio.setText("Ingrese el precio...");
        JTFbuscarPorPrecio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                JTFbuscarPorPrecioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                JTFbuscarPorPrecioFocusLost(evt);
            }
        });

        JTFbuscarPorPrecio1.setText("Ingrese el precio...");
        JTFbuscarPorPrecio1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                JTFbuscarPorPrecio1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                JTFbuscarPorPrecio1FocusLost(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel2.setText("Buscar precios entre: $");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel3.setText("y");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JTFbuscarPorPrecio1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JTFbuscarPorPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTFbuscarPorPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(JTFbuscarPorPrecio1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JTFbuscarPorPrecioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JTFbuscarPorPrecioFocusGained
        if (JTFbuscarPorPrecio.getText().equals("Ingrese el precio...")) {
            JTFbuscarPorPrecio.setText("");
        }
    }//GEN-LAST:event_JTFbuscarPorPrecioFocusGained

    private void JTFbuscarPorPrecioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JTFbuscarPorPrecioFocusLost
        if (JTFbuscarPorPrecio.getText().isEmpty()) {
            JTFbuscarPorPrecio.setText("Ingrese el precio...");
        }
    }//GEN-LAST:event_JTFbuscarPorPrecioFocusLost

    private void JTFbuscarPorPrecio1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JTFbuscarPorPrecio1FocusGained
        if (JTFbuscarPorPrecio1.getText().equals("Ingrese el precio...")) {
            JTFbuscarPorPrecio1.setText("");
        }
    }//GEN-LAST:event_JTFbuscarPorPrecio1FocusGained

    private void JTFbuscarPorPrecio1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JTFbuscarPorPrecio1FocusLost
        if (JTFbuscarPorPrecio1.getText().isEmpty()) {
            JTFbuscarPorPrecio1.setText("Ingrese el precio...");
        }
    }//GEN-LAST:event_JTFbuscarPorPrecio1FocusLost

    private void filtrarPorPrecio() {
    String textoMinimo = JTFbuscarPorPrecio1.getText().replace("Ingrese el precio mínimo...", "").trim();
    String textoMaximo = JTFbuscarPorPrecio.getText().replace("Ingrese el precio máximo...", "").trim();

    double precioMinimo = Double.MIN_VALUE;
    double precioMaximo = Double.MAX_VALUE;

    
    try {
        if (!textoMinimo.isEmpty()) {
            precioMinimo = Double.parseDouble(textoMinimo);
        }
    } catch (NumberFormatException e) {
        precioMinimo = Double.MIN_VALUE; 
    }

    try {
        if (!textoMaximo.isEmpty()) {
            precioMaximo = Double.parseDouble(textoMaximo);
        }
    } catch (NumberFormatException e) {
        precioMaximo = Double.MAX_VALUE; 
    }

    
    if (precioMinimo > precioMaximo) {
        double temp = precioMinimo;
        precioMinimo = precioMaximo;
        precioMaximo = temp;
    }

    borrarFilasTabla();

    TreeSet<Producto> listaProd = Producto.getProductos();
    for (Producto prod : listaProd) {
        double precio = prod.getPrecio();
        if (precio >= precioMinimo && precio <= precioMaximo) {
            Object[] nuevaFila = {prod.getCodigo(), prod.getDescripcion(), prod.getPrecio(), prod.getStock(), prod.getRubro()};
            modelo.addRow(nuevaFila);
        }
    }
    }

    private void borrarFilasTabla() {
        int filas = modelo.getRowCount() - 1;
        for (int i = filas; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTFbuscarPorPrecio;
    private javax.swing.JTextField JTFbuscarPorPrecio1;
    private javax.swing.JTable JTablePrecios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
